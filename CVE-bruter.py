import concurrent.futures
import requests
import threading
import sys
import time
from colorama import Fore, Style
print(Style.BRIGHT + Fore.WHITE + '''/

                          _                _           _ _ 
 ___ _ __ ___   __ _  ___| | _____ _ __ __| | ___   __| (_)
/ __| '_ ` _ \ / _` |/ __| |/ / _ \ '__/ _` |/ _ \ / _` | |
\__ \ | | | | | (_| | (__|   <  __/ | | (_| | (_) | (_| | |
|___/_| |_| |_|\__,_|\___|_|\_\___|_|  \__,_|\___/ \__,_|_|

''')
print(Fore.GREEN + '''/              CODED BY : DAOUD YOUSSEF          


''')           
if len(sys.argv) < 2:
	print("You must give urls file")
	print("Example : python3 CVE-bruter.py ~/Desktop/urls.txt")
	sys.exit()
elif len(sys.argv) > 2:
	print("This is a lot of arguments we need just the urls file")
	sys.exit()
else:
	pass
inputfile=sys.argv[1]
path=input("please enter your path file:  ")
with open(inputfile, "r") as f:
	inputurl = [line.rstrip() for line in f]
threadLocal = threading.local()
count = len(inputurl)
print("number of urls = " + str(count))
def get_session():
    if not hasattr(threadLocal, "session"):
        threadLocal.session = requests.Session()
    return threadLocal.session
def check_sub(url):
	try :
		session=get_session()
		res=session.get(url, timeout=1, allow_redirects=False)
		print(Style.BRIGHT + Fore.WHITE + (url)+ " : " + Fore.YELLOW + str(res.status_code))
	except:
		print(Style.BRIGHT + Fore.WHITE + (url)+ " : " + Fore.RED+ " : is unreachable")
def itterate_url(inputurl):
	if "http" in inputurl:	
		url=inputurl+"/"+path
		check_sub(url)
	else :
		url="https://"+inputurl+"/"+path
		check_sub(url)
if __name__ == "__main__":
	start_time = time.time()
	with concurrent.futures.ThreadPoolExecutor(max_workers=20) as executor:
       		executor.map(itterate_url, inputurl)
	duration = time.time() - start_time
	print("finished in : " + str(duration) + "  sec")

